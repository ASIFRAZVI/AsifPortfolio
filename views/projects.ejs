<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Projects</title>
    <link rel="stylesheet" href="projects.css">
</head>
<body>
    <header>
        <h1>Project Details</h1>
        <a class="back-button" href="/">Back to Dashboard</a>
    </header>

    <section>
        <div class="project">
            <div class="project-title">Project 1 -Expense Tracker</div>
            <img src="projects1.png" alt="Project 1 Snapshot">
            <div class="project-details">
               
                <p>
                    I developed an expense tracker application that offers users a seamless experience for managing their expenses.
                    Leveraging Express.js, Node.js, EJS, CSS, and JavaScript, I ensured a smooth and user-friendly interface. The data is
                    stored efficiently using MongoDB, and for deployment, I chose AWS, Nginx, Git, and GitHub to maintain a robust and
                    scalable platform.
                </p>
                    <p>
                
                    The app's core functionality centers around user registration and login, allowing each user to have a personalized
                    experience. Upon logging in, users are presented with a well-designed home page, showcasing their expenses with
                    proper pagination for easy navigation. Adding and deleting expenses is straightforward, and users can view their
                    total expenses, aiding them in maintaining financial awareness.
                </p>
                
                    <p>
                    To enhance the app's appeal and functionality, I included additional pages for 'About' and 'Contact Us,' enabling
                    users to provide valuable feedback and inquiries. A logout button is also available, allowing users to securely exit
                    the application.
                </p>
                
                <p>
                    For those seeking advanced features like accessing the leaderboard and downloading expense reports, I introduced a
                    Pro membership option. Users can purchase this membership seamlessly through Razorpay, offering excellent value at a
                    cost of only 299.
                </p>
                
                <p>
                    Security is of utmost importance, and I ensured that by implementing a password reset mechanism. When a user clicks
                    the 'Reset Password' button, they receive an email with instructions on resetting their password, bolstering account
                    protection.
                </p>
                
                <p>
                    To maximize the app's performance, I utilized Nginx as a reverse proxy server, handling client requests efficiently.
                    Finally, I deployed the app on AWS EC2, S3, and Elastic IP, ensuring a highly available and reliable application
                    accessible to users anytime, anywhere.
                </p>
                
                <p>
                    Overall, this project showcases my expertise in full-stack web development, backend setup, database management,
                    deployment, and payment integration. The app's seamless user experience and professional-grade features.
                   
                </p>
                
                <a href="https://expence-tracker-app.onrender.com/">View Expense Tracker</a>
            </div>
        </div>

        <div class="project">
            <div class="project-title">Project 2 - Group Chat Application</div>
            <img src="project2.png" alt="Project 2 Snapshot">
            <div class="project-details">
               
                <p>
                    I developed a Group Chat application that enables users to communicate in real-time, fostering seamless collaboration
                    and communication within a group. The app is built using Express.js, Node.js, EJS, CSS, and JavaScript. Real-time
                    communication is made possible by leveraging Socket.io, providing users with instant messaging capabilities.
                </p>
                
                <p>
                    The app allows users to register and log in securely, creating a personalized experience for each participant. Once
                    logged in, users can access the main chat interface, where they can exchange messages with other members of the group.
                    Socket.io ensures that messages are delivered instantly, facilitating smooth and uninterrupted communication.
                </p>
                
                <p>
                    For a better user experience, the chat messages are displayed in an organized and easily readable format. Additionally,
                    users have the ability to view the active participants in the chat, enhancing transparency and engagement within the
                    group.
                </p>
                
                <p>
                    To further enhance the app's utility, I implemented the option to create multiple chat rooms. Users can switch between
                    different chat rooms based on their interests or project teams, making the app versatile and accommodating diverse
                    communication needs.
                </p>
                
                <p>
                    As a security measure, the app implements user authentication and authorization, ensuring that only registered and
                    logged-in users can access the chat rooms. This guarantees a safe and private communication environment for all
                    participants.
                </p>
                
                <p>
                    To deploy the app and manage client-server communication efficiently, I employed Nginx as a reverse proxy server,
                    optimizing performance and scalability. The app is hosted on AWS EC2, providing high availability and accessibility
                    to users at any time.
                </p>
                
                <p>
                    Overall, this Group Chat application exemplifies my expertise in web development, real-time communication
                    integration using Socket.io, and deployment on a scalable infrastructure. Its interactive and user-friendly features.
           
                </p>
                
                <a href="https://groupchatapplication-uvgn.onrender.com/">View Group Chat Application</a>
            </br>

                <h3>Note:- I have worked on several Projects but here I mentioned the major and Live Projects only!</h3>
            </div>
        </div>
    </section>
   
       
 

    <div class="internship">
        <h2>Internship Experience</h2>
        <p>
            During my internship at COMPSOFT TECHNOLOGIES Bangalore, 
            I had the privilege of being part of a dynamic 2-member team that successfully developed the backend website </br>"LEAF NOW." As the team leader,
            I gained valuable experience in collaborating effectively and learned how to function seamlessly within a team.
            The website</br> "LEAF NOW" is an expense manager platform dedicated to promoting financial awareness. 
        </br>
        <p>
            I developed an expense tracker application that offers users a seamless experience for managing their expenses.
            Leveraging Express.js, Node.js, EJS, CSS, and JavaScript, I ensured a smooth and user-friendly interface. The data is
            stored efficiently using MongoDB, and for deployment, I chose AWS, Nginx, Git, and GitHub to maintain a robust and
            scalable platform.
        </p>
            <p>
        
            The app's core functionality centers around user registration and login, allowing each user to have a personalized
            experience. Upon logging in, users are presented with a well-designed home page, showcasing their expenses with
            proper pagination for easy navigation. Adding and deleting expenses is straightforward, and users can view their
            total expenses, aiding them in maintaining financial awareness.
        </p>
        
            <p>
            To enhance the app's appeal and functionality, I included additional pages for 'About' and 'Contact Us,' enabling
            users to provide valuable feedback and inquiries. A logout button is also available, allowing users to securely exit
            the application.
        </p>
        
        <p>
            For those seeking advanced features like accessing the leaderboard and downloading expense reports, I introduced a
            Pro membership option. Users can purchase this membership seamlessly through Razorpay, offering excellent value at a
            cost of only 299.
        </p>
        
        <p>
            Security is of utmost importance, and I ensured that by implementing a password reset mechanism. When a user clicks
            the 'Reset Password' button, they receive an email with instructions on resetting their password, bolstering account
            protection.
        </p>
        
        <p>
            To maximize the app's performance, I utilized Nginx as a reverse proxy server, handling client requests efficiently.
            Finally, I deployed the app on AWS EC2, S3, and Elastic IP, ensuring a highly available and reliable application
            accessible to users anytime, anywhere.
        </p>
        
        <p>
            Overall, this project showcases my expertise in full-stack web development, backend setup, database management,
            deployment, and payment integration. The app's seamless user experience and professional-grade features.
           
        </p>
            
        <a href="https://userexpence.s3.ap-south-1.amazonaws.com/CamScanner+08-25-2023+19.34.pdf">View Certificate</a>
    </div>
</body>
</html>
